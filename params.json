{"tagline":"youRoom4J is a Java library for the youRoom API.","name":"youRoom4J","body":"youRoom4J [![Build Status](https://buildhive.cloudbees.com/job/hotchemi/job/youroom4j/badge/icon)](https://buildhive.cloudbees.com/job/hotchemi/job/youroom4j/)\r\n=========\r\nyouRoom4Jは<a target=\"blank\" href=\"https://www.youroom.in\">youRoom</a>が提供している<a target=\"blank\" href=\"http://apidoc.youroom.in\">API</a>のJavaラッパーです。<br/>\r\nyouRoom4Jを使うとyouRoomのAPIを活用したアプリケーションを容易に開発することが出来ます｡<br/>\r\nyouRoom4Jは非公式のライブラリです｡\r\n\r\n* OAuthに対応｡\r\n* XAuthは対応予定｡\r\n* Enterprise methodsは現在対応中｡\r\n* Android､GAEは対応予定｡\r\n\r\n##Source Code\r\nプロジェクトのリポジトリには以下のURLからアクセスできます｡\r\n```ruby\r\ngithub: https://github.com/hotchemi/youroom4j\r\n```\r\nまた､以下のようにgitを使って最新のソースコードをチェックアウトすることもできます。\r\n```ruby\r\ngit clone git@github.com:hotchemi/youroom4j.git\r\n```\r\n##Usage\r\n<a target=\"blank\" href=\"https://github.com/hotchemi/youroom4j/downloads\">Downloads</a>より最新版のjarを取得し､クラスパスを通して下さい｡<br/>\r\nJavaが分かっていれば<a target=\"blank\" href=\"http://youroom4j.herokuapp.com\">JavaDoc</a>を見る事をお薦めします｡\r\n##Sample Code\r\n### 1. OAuth\r\nOAuth認証を利用するとユーザーにメールアドレスとパスワードを提供してもらうことなくユーザのアカウントにアクセスできます｡<br/>\r\nOAuthを利用するにはhttp://apidoc.youroom.in/authentication で事前に申請を行いconsumer key/secretを取得しておく必要があります｡<br/>\r\n取得したconsumer key/secretはOAuthAuthorization#setOAuthConsumerクラスに設定します｡<br/>\r\nこの際､認証後にコールバックされるURLも同時に指定する必要があります｡\r\n```java\r\nOAuthAuthorization authorization= new OAuthAuthorization();\r\nauthorization.setOAuthConsumer(\"consumerKey\", \"consumerSecret\", \"callbackUrl\");\r\n```\r\n以下のようにauthorization URLにユーザを誘導し､AccessTokenを取得する必要があります。\r\n```java\r\npublic static void main(String[] args) throws Exception {\r\n  OAuthAuthorization authorization= new OAuthAuthorization();\r\n  authorization.setOAuthConsumer(\"consumerKey\", \"consumerSecret\", \"callbackUrl\");\r\n  \r\n  System.out.println(authorization.getAuthorizationUrl());\r\n  System.out.print(\"enter oauth_verifier:\");\r\n  BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\r\n  String oauthVerifier = \"\";\r\n  \r\n  try {\r\n    // コールバックURLについてくるoauth_verifier=以下を入力\r\n    oauthVerifier = br.readLine();\r\n  } catch (IOException e) {\r\n    e.printStackTrace();\r\n  }\r\n\r\n  // accessToken.getAceessToken()とaccessToken.getAceessTokenSecret()を永続化\r\n  AccessToken accessToken = authorization.getAccessToken(oauthVerifier);\r\n  System.out.println(\"accessToken=\" + accessToken.getAceessToken());\r\n  System.out.println(\"accessTokenSecret\" + accessToken.getAceessTokenSecret());\r\n}\r\n```\r\n次回からはconsumer key/secretとaccess token/secretのみでユーザアカウントにアクセスできます｡\r\n取得したconsumer key/secretとaccess token/secretを設定します｡\r\n```java\r\nYouroom youRoom = YouRoomFactory.createInstance();\r\nyouroom.setOAuthConsumer(\"consumerKey\", \"consumerSecret\");\r\nyouroom.setOAuthAccessToken(\"accessToken\", \"accessTokenSecret\");\r\n```\r\n### 2. Home Timeline\r\nYouRoom#getHomeTimeline()メソッドはホームタイムラインを返します｡<br/>\r\n引数にPagingオブジェクトを指定します｡\r\n```java\r\nPaging paging = new Paging(String since, boolean flat, int page, String readState);\r\nList<Entry> list = youRoom.getHomeTimeline(paging);\r\n```\r\n+ `since` :\r\n  Bigining time of fetch entries. Use the RFC 3339 timestamp format. _For example: 2005-08-09T10:57:00-08:00._\r\n+ `flat` :\r\n  If given _\"true\"_, response is include topics and comments and sorted by created_at.\r\n+ `page` :\r\n  Pagination entries.\r\n+ `readState` :\r\n  If given _\"unread\"_, response is include only unread topics.\r\n\r\n### 3. Room Timeline\r\nYouRoom#getRoomTimeline()メソッドは指定したルームのタイムラインを返します｡<br/>\r\n引数にPagingオブジェクトを指定します｡\r\n```java\r\nPaging paging = new Paging(int groupParam, String since, String searchQuery, boolean flat, int page, String readState);\r\nList<Entry> list = youRoom.getRoomTimeline(paging);\r\n```\r\n+ `groupParam` :\r\n  __Required.__ The subdomain of the room include entry to destroy.\r\n+ `since` :\r\n  Bigining time of fetch entries. Use the RFC 3339 timestamp format. _For example: 2005-08-09T10:57:00-08:00._\r\n+ `searchQuery` :\r\n  Keyword for search entries.\r\n+ `flat` :\r\n  If given _\"true\"_, response is include topics and comments and sorted by created_at.\r\n+ `page` :\r\n  Pagination entries.\r\n+ `readState` :\r\n  If given _\"unread\"_, response is include only unread topics.\r\n\r\n### 4. Entry Show\r\nYouRoom#showEntry()メソッドは指定したエントリの情報を返します｡\r\n```java\r\nEntry entry = youRoom.showEntry(int id, int groupParam);\r\n```\r\n+ `id` :\r\n  __Required.__ The ID of the entry.\r\n+ `groupParam` :\r\n  __Required.__ The subdomain of the room include entry.\r\n\r\n### 5. Create Entry\r\nYouRoom#createEntry()メソッドで指定したルームにエントリを投稿することができます。\r\n```java\r\nEntry entry = youRoom.createEntry(String content, int parentId, int groupParam);\r\n```\r\n+ `content` :\r\n  __Required.__ The text of Entry's content. Text over 140 characters will cause a 422 error to be returned from the API.\r\n+ `parentId` :\r\n  __Optional.__ The id of parent entry.\r\n+ `groupParam` :\r\n  __Required.__ The subdomain of the room include entry to create.\r\n\r\n### 6. Update Entry\r\nYouRoom#updateEntry()メソッドで指定したエントリを更新することができます。\r\n```java\r\nEntry entry = youRoom.createEntry(int id, String content, int groupParam);\r\n```\r\n+ `id` :\r\n  __Required.__ The ID of the entry to update.\r\n+ `content` :\r\n  __Required.__ The text of Entry's content. Text over 140 characters will cause a 422 error to be returned from the API.\r\n+ `groupParam` :\r\n  __Required.__ The subdomain of the room include entry to update.\r\n\r\n### 7. Destroy Entry\r\nYouRoom#destroyEntry()メソッドで指定したエントリを削除することができます。\r\n```java\r\nEntry entry = youRoom.destroyEntry(int id, int groupParam);\r\n```\r\n+ `id` :\r\n  __Required.__ The ID of the entry to destroy.\r\n+ `groupParam` :\r\n  __Required.__ The subdomain of the room include entry to destroy.\r\n\r\n### 8. show Attachment\r\nYouRoom#showAttachment()メソッドで指定したエントリの添付ファイルを取得します｡\r\n```java\r\nbyte[] attachment = youRoom.showAttachment(int id, int groupParam);\r\n```\r\n+ `id` :\r\n  __Required.__ The ID of the entry.\r\n+ `groupParam` :\r\n  __Required.__ The subdomain of the room include entry.\r\n\r\n### 9. My Groups\r\nYouRoom#getMyGroups()メソッドで所属しているルーム一覧を取得できます｡\r\n```java\r\nList<MyGroup> groups = youRoom.getMyGroups();\r\n```\r\n### 10. User/verify_credentials\r\nYouRoom#verifyCredentials()メソッドでユーザアカウント情報を取得できます｡\r\n```java\r\nUser user = youRoom.verifyCredentials();\r\n```    \r\n### 11. Show Picture\r\nYouRoom#showPicture()メソッドでエントリに添付されている画像情報を取得できます｡\r\n```java\r\nbyte[] picture = youRoom.showPicture(int groupParam, int participationId);\r\n```\r\n+ `groupParam` :\r\n  __Required.__ The subdomain of the room include entry.\r\n+ `participationId` :\r\n  __Required.__ The ID of the entry.\r\n\r\n##ライセンス\r\nyouRoom4JはMIT Licenseに基づきリリースされています｡\r\n```\r\nThe MIT License\r\n\r\nCopyright (c) 2012 Shintaro Katafuchi\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy\r\nof this software and associated documentation files (the \"Software\"), to deal\r\nin the Software without restriction, including without limitation the rights\r\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\ncopies of the Software, and to permit persons to whom the Software is\r\nfurnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in\r\nall copies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\nTHE SOFTWARE.\r\n```\r\n* youRoom4JはXMLレスポンスの解析のため､<a target=\"blank\" href=\"http://code.google.com/p/joox/\">jOOX</a>のソフトウェアを含んでいます｡<br/>\r\njOOXのソフトウェアのライセンスについては<a target=\"blank\" href=\"http://www.apache.org/licenses/\">こちら</a>をご覧ください｡<br/>\r\n\r\n* youRoom4JはOAuth認証のため､<a target=\"blank\" href=\"https://github.com/fernandezpablo85/scribe-java\">scribe-java</a>のソフトウェアを含んでいます｡<br/>\r\nscribe-javaのソフトウェアのライセンスについては<a target=\"blank\" href=\"https://github.com/fernandezpablo85/scribe-java/blob/master/LICENSE.txt\">こちら</a>をご覧ください。\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}